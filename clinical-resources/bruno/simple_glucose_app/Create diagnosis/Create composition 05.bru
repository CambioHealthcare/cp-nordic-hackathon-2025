meta {
  name: Create composition 05
  type: http
  seq: 5
}

post {
  url: {{EHR_BASE_URL}}/v1/ehr/{{EHR_ID}}/composition
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{JWT_TOKEN_PERSONA_1}}
}

body:json {
  {
    "_type": "COMPOSITION",
    "name": {
      "_type": "DV_TEXT",
      "value": "simple_problem_diagnosis.v0.0.1"
    },
    "archetype_node_id": "openEHR-EHR-COMPOSITION.encounter.v1",
    "archetype_details": {
      "archetype_id": {
        "value": "openEHR-EHR-COMPOSITION.encounter.v1"
      },
      "template_id": {
        "value": "simple_problem_diagnosis.v0.0.1"
      },
      "rm_version": "1.0.4"
    },
    "language": {
      "terminology_id": {
        "value": "ISO_639-1"
      },
      "code_string": "en"
    },
    "territory": {
      "terminology_id": {
        "value": "ISO_3166-1"
      },
      "code_string": "SE"
    },
    "category": {
      "value": "event",
      "defining_code": {
        "terminology_id": {
          "value": "openehr"
        },
        "code_string": "433"
      }
    },
    "composer": {
      "_type": "PARTY_IDENTIFIED",
      "name": "composer name"
    },
    "context": {
      "start_time": {
        "_type": "DV_DATE_TIME",
        "value": "2017-09-10T11:15:12.713340708Z"
      },
      "setting": {
        "value": "other care",
        "defining_code": {
          "terminology_id": {
            "value": "openehr"
          },
          "code_string": "238"
        }
      }
    },
    "content": [
      {
        "_type": "EVALUATION",
        "name": {
          "_type": "DV_TEXT",
          "value": "DEFAULT TEXT"
        },
        "archetype_node_id": "openEHR-EHR-EVALUATION.problem_diagnosis.v1",
        "archetype_details": {
          "archetype_id": {
            "value": "openEHR-EHR-EVALUATION.problem_diagnosis.v1"
          },
          "rm_version": "1.0.4"
        },
        "language": {
          "terminology_id": {
            "value": "ISO_639-1"
          },
          "code_string": "en"
        },
        "encoding": {
          "terminology_id": {
            "value": "IANA_character-sets"
          },
          "code_string": "UTF-8"
        },
        "subject": {
          "_type": "PARTY_SELF"
        },
        "data": {
          "_type": "ITEM_TREE",
          "name": {
            "_type": "DV_TEXT",
            "value": "structure"
          },
          "archetype_node_id": "at0001",
          "items": [
            {
              "_type": "ELEMENT",
              "name": {
                "_type": "DV_TEXT",
                "value": "Problem/Diagnosis name"
              },
              "archetype_node_id": "at0002",
              "value": {
                "_type": "DV_CODED_TEXT",
                "value": "Atrial fibrillation and flutter",
                "defining_code": {
                  "terminology_id": {
                    "value": "ICD10"
                  },
                  "code_string": "I10"
                }
              }
            },
            {
              "_type": "ELEMENT",
              "name": {
                "_type": "DV_TEXT",
                "value": "Date/time of onset"
              },
              "archetype_node_id": "at0077",
              "value": {
                "_type": "DV_DATE_TIME",
                "value": "2017-09-10T11:00:00+02:00"
              }
            }
          ]
        }
      }
    ]
  }
}

tests {
  test("Status code is 201", function () {
      expect(res.getStatus(), res.getBody()?.toString()).eq(201);
  });
  
  test("Expecting a valid, newly created Composition", function() {
      const composition  = res.getBody();
      const composition_uid = composition.uid.value.substr(0, composition.uid.value.indexOf('::'));
      bru.setVar("COMPOSITION_ID", composition_uid);
  });
}
